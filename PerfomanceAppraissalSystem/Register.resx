<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        fgAAAH4BavEubQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEqSURBVDhPndO9
        SgNBFIbhCTGa2ERvQAgSQhoLLcSgaBmwEAshJCoWWggKomAaES0k/hSKIuIPWNkJ3kGKXIZX4/vtzGri
        TtyYDx727LJ7MnOya3rIPm5w7tFCbOoYtWUkahKbvhpkMIUh/LuBbn7FKt4wj0H44m2whJItzTIWbOlN
        pIEefMEmxvAErURbCZN0R6WjwQMqGA/OjHlGDWeY1AWXORzY8qdBAVu4QhNZTGADs9jDDvTANT4x7M6D
        rGEaJ7h05++4xTYGEGYGOVvaBnlo0rp5EVreKcJBHmLElpEEDTSoC6zjHkVo2bs4Qux7oL1peFVoWHfQ
        v6DhrTgJ+NIxA+1dH01KF4jegTK0qm75bqCk3TGMfvURDfy5hWNX+KjBx69rbUzrCxUgNzhAscG8AAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="cmdRegister.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        WQAAAFkBqp2phgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIxSURBVDhPdZJf
        SFNhGMaPGg4E6ya68CLDopvtrEvJy0qpJCgk6yaCIghSJLrRkP4w6KJWNJwzag1DMS80lViwg5tOa/Nf
        WbmV2+yuiwZqsf6MaPue3u98x7OzTV94OAfO+/y+733PIxUWPssy4lYH4nKE9EsTvVseYsVq0dqKC4l9
        JmpyUXOWhC2UQUJ2Imou12yiVHPMGjA2ry8eRGLysNGcU0L250Hoyj3GBmXoHC5ce4yjzXbYbrXljB+P
        ADHLBqRLmNWZ86/der0bV9oJcMaOY2ftyMzuEt9CHrBQ9QaExjlg5qfzhelmrt8zCtjbCSRH3EiOPkF2
        YhtYcD/YyD1k+hvAwpUCEpMfEECOFgKwqABhL/DiPuB7imygFGzAhL+ndiDdaiKgpEHMEQ74WQT4QMZ5
        grx0AgGnMBQANMg/DkgZzfGl0xieu4Pvr11Iv3qES0NjGPSe3xSQDZayvBH+LNeiSfmKRt8qOn1RdLqD
        kLqBsh6GZN9uAWgxAKbL0wSghGmAb58aVPMh77r6LHEBkoNEkOG+ZtguXkVvx0kdwGa2L0g8nmTOGAF7
        +tM5wE0SrcKvtOHZYAj+UYcATJYAcztPiCzweBIgtVwHT+A2bGN34Rm/gcbnU2hye3F8YBpfpurxI9aL
        1LvL4vRw5XvVzIvHkgDjHILIXlpOmX7NzcTeVKxhoapCs4tSIRRPdZytIHRtfnKR2Vg8njxhWKpZIQjj
        v4pvmy9Mn1kvSfoPrzZyrV4r2QwAAAAASUVORK5CYII=
</value>
  </data>
</root>